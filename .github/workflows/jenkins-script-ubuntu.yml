name: Run .jenkins script (Ubuntu)
run-name: Build ${{ inputs.repository }} on Ubuntu

on:
  workflow_call:
    inputs:
      submodules:
        description: 'Whether to checkout submodules'
        default: false
        type: boolean
  workflow_dispatch:
    inputs:
      repository:
        description: 'Full name of the repository on which to run the workflow'
        default: named-data/
        required: true
        type: string
      submodules:
        description: 'Checkout submodules?'
        default: false
        type: boolean

permissions: {}

jobs:
  build:
    name: ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ !!matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: ubuntu-20.04, compiler: g++-9}
          - {os: ubuntu-22.04, compiler: g++-10}
          - {os: ubuntu-22.04, compiler: g++-11}
          - {os: ubuntu-22.04, compiler: g++-12}
          - {os: ubuntu-24.04, compiler: g++-13}
          - {os: ubuntu-24.04, compiler: g++-14}
          # - {os: ubuntu-24.04, compiler: g++-latest, experimental: true}
          - {os: ubuntu-20.04, compiler: clang++-10}
          - {os: ubuntu-22.04, compiler: clang++-11}
          - {os: ubuntu-22.04, compiler: clang++-12}
          - {os: ubuntu-22.04, compiler: clang++-13}
          - {os: ubuntu-22.04, compiler: clang++-14}
          - {os: ubuntu-22.04, compiler: clang++-15}
          - {os: ubuntu-24.04, compiler: clang++-16}
          - {os: ubuntu-24.04, compiler: clang++-17}
          - {os: ubuntu-24.04, compiler: clang++-18}
          - {os: ubuntu-24.04, compiler: clang++-19, experimental: true}
          - {os: ubuntu-24.04, compiler: clang++-20, experimental: true}
    env:
      CXX: ${{ matrix.compiler }}
    steps:
      - name: Install C++ compiler
        run: |
          case ${CXX} in
            g++-latest)
              curl -fLOSs 'https://kayari.org/gcc-latest/gcc-latest.deb'
              sudo dpkg -i gcc-latest.deb
              rm gcc-latest.deb
              sudo ln -s g++ /opt/gcc-latest/bin/g++-latest
              echo /opt/gcc-latest/bin >> "$GITHUB_PATH"
              echo LD_RUN_PATH=/opt/gcc-latest/lib64 >> "$GITHUB_ENV"
              ;;
            g++-15)
              sudo add-apt-repository -ny -P ubuntu-toolchain-r/test
              ;;&
            clang++-19|clang++-20)
              curl -fLSs "${GITHUB_SERVER_URL}/named-data/actions/raw/v1/llvm-$(lsb_release -cs).sources" \
                | sudo tee /etc/apt/sources.list.d/llvm.sources >/dev/null
              ;;&
            *)
              sudo apt-get -qq update
              sudo apt-get -qy install "${CXX/clang++/clang}"
              ;;
          esac
      - name: Print compiler version
        run: ${CXX} --version
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository || github.repository }}
          submodules: ${{ inputs.submodules }}
          show-progress: false
      - name: Build and test
        env:
          CACHE_DIR: ${{ runner.temp }}
        run: ./.jenkins
