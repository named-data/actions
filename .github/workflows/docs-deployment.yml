name: Deploy documentation
on:
  workflow_call:
    inputs:
      project:
        description: >
          Project name. By default, this is derived from $GITHUB_REPOSITORY.
        type: string
      version:
        description: >
          Project version. By default, this is derived from $GITHUB_REF_NAME.
        type: string
      artifact-name:
        description: >
          Name of the artifact containing the files to be deployed. Any
          top-level tarballs in the artifact are automatically extracted.
        default: docs
        type: string

permissions: {}

jobs:
  deploy:
    if: vars.DOCS_DEPLOYMENT_HOST != ''
    runs-on: ubuntu-latest
    concurrency: docs
    environment:
      name: docs
      url: https://${{ vars.DOCS_DEPLOYMENT_HOST }}/${{ steps.metadata.outputs.slug }}/
    steps:
      - name: Determine project name and version
        id: metadata
        env:
          PN: ${{ inputs.project }}
          PV: ${{ inputs.version }}
        run: |
          if [[ -z ${PN} ]]; then
            PN=${GITHUB_REPOSITORY#*/}
          fi
          if [[ -z ${PV} ]]; then
            PV=${GITHUB_REF_NAME#"${PN}"-}
            PV=${PV#v}
          fi
          tee -a "$GITHUB_OUTPUT" <<EOF
          name=${PN}
          version=${PV}
          slug=${PN}/${PV}
          EOF
      - name: Download archive
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
      - name: Extract archive
        run: |
          shopt -s nullglob
          for f in *.tar.*; do
            tar -xf "$f"
            rm -f "$f"
          done
      - name: Deploy to ${{ vars.DOCS_DEPLOYMENT_HOST }}
        uses: easingthemes/ssh-deploy@01a39e33483634cbd7ac99020c55b72ca7f098fe # v5.0.3
        with:
          ARGS: -chirvzEW --delay-updates --delete-delay
          REMOTE_HOST: ${{ vars.DOCS_DEPLOYMENT_HOST }}
          REMOTE_PORT: ${{ secrets.DOCS_DEPLOYMENT_PORT }}
          REMOTE_USER: ${{ secrets.DOCS_DEPLOYMENT_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.DOCS_DEPLOYMENT_SSH_KEY }}
          SOURCE: ./
          TARGET: /srv/docs/${{ steps.metadata.outputs.slug }}/
